// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: estafette/ci/manifest/v1/estafette_manifest.proto

package com.estafette.ci.manifest.v1;

public interface EstafetteManifestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:estafette.ci.manifest.v1.EstafetteManifest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.estafette.ci.manifest.v1.EstafetteBuilder builder = 1;</code>
   */
  boolean hasBuilder();
  /**
   * <code>.estafette.ci.manifest.v1.EstafetteBuilder builder = 1;</code>
   */
  com.estafette.ci.manifest.v1.EstafetteBuilder getBuilder();
  /**
   * <code>.estafette.ci.manifest.v1.EstafetteBuilder builder = 1;</code>
   */
  com.estafette.ci.manifest.v1.EstafetteBuilderOrBuilder getBuilderOrBuilder();

  /**
   * <code>map&lt;string, string&gt; labels = 2;</code>
   */
  int getLabelsCount();
  /**
   * <code>map&lt;string, string&gt; labels = 2;</code>
   */
  boolean containsLabels(
      java.lang.String key);
  /**
   * Use {@link #getLabelsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getLabels();
  /**
   * <code>map&lt;string, string&gt; labels = 2;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getLabelsMap();
  /**
   * <code>map&lt;string, string&gt; labels = 2;</code>
   */

  java.lang.String getLabelsOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <code>map&lt;string, string&gt; labels = 2;</code>
   */

  java.lang.String getLabelsOrThrow(
      java.lang.String key);

  /**
   * <code>.estafette.ci.manifest.v1.EstafetteVersion version = 3;</code>
   */
  boolean hasVersion();
  /**
   * <code>.estafette.ci.manifest.v1.EstafetteVersion version = 3;</code>
   */
  com.estafette.ci.manifest.v1.EstafetteVersion getVersion();
  /**
   * <code>.estafette.ci.manifest.v1.EstafetteVersion version = 3;</code>
   */
  com.estafette.ci.manifest.v1.EstafetteVersionOrBuilder getVersionOrBuilder();

  /**
   * <code>map&lt;string, string&gt; global_env_vars = 4;</code>
   */
  int getGlobalEnvVarsCount();
  /**
   * <code>map&lt;string, string&gt; global_env_vars = 4;</code>
   */
  boolean containsGlobalEnvVars(
      java.lang.String key);
  /**
   * Use {@link #getGlobalEnvVarsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getGlobalEnvVars();
  /**
   * <code>map&lt;string, string&gt; global_env_vars = 4;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getGlobalEnvVarsMap();
  /**
   * <code>map&lt;string, string&gt; global_env_vars = 4;</code>
   */

  java.lang.String getGlobalEnvVarsOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <code>map&lt;string, string&gt; global_env_vars = 4;</code>
   */

  java.lang.String getGlobalEnvVarsOrThrow(
      java.lang.String key);

  /**
   * <code>repeated .estafette.ci.manifest.v1.EstafetteTrigger triggers = 5;</code>
   */
  java.util.List<com.estafette.ci.manifest.v1.EstafetteTrigger> 
      getTriggersList();
  /**
   * <code>repeated .estafette.ci.manifest.v1.EstafetteTrigger triggers = 5;</code>
   */
  com.estafette.ci.manifest.v1.EstafetteTrigger getTriggers(int index);
  /**
   * <code>repeated .estafette.ci.manifest.v1.EstafetteTrigger triggers = 5;</code>
   */
  int getTriggersCount();
  /**
   * <code>repeated .estafette.ci.manifest.v1.EstafetteTrigger triggers = 5;</code>
   */
  java.util.List<? extends com.estafette.ci.manifest.v1.EstafetteTriggerOrBuilder> 
      getTriggersOrBuilderList();
  /**
   * <code>repeated .estafette.ci.manifest.v1.EstafetteTrigger triggers = 5;</code>
   */
  com.estafette.ci.manifest.v1.EstafetteTriggerOrBuilder getTriggersOrBuilder(
      int index);

  /**
   * <code>repeated .estafette.ci.manifest.v1.EstafetteStage stages = 6;</code>
   */
  java.util.List<com.estafette.ci.manifest.v1.EstafetteStage> 
      getStagesList();
  /**
   * <code>repeated .estafette.ci.manifest.v1.EstafetteStage stages = 6;</code>
   */
  com.estafette.ci.manifest.v1.EstafetteStage getStages(int index);
  /**
   * <code>repeated .estafette.ci.manifest.v1.EstafetteStage stages = 6;</code>
   */
  int getStagesCount();
  /**
   * <code>repeated .estafette.ci.manifest.v1.EstafetteStage stages = 6;</code>
   */
  java.util.List<? extends com.estafette.ci.manifest.v1.EstafetteStageOrBuilder> 
      getStagesOrBuilderList();
  /**
   * <code>repeated .estafette.ci.manifest.v1.EstafetteStage stages = 6;</code>
   */
  com.estafette.ci.manifest.v1.EstafetteStageOrBuilder getStagesOrBuilder(
      int index);

  /**
   * <code>repeated .estafette.ci.manifest.v1.EstafetteRelease releases = 7;</code>
   */
  java.util.List<com.estafette.ci.manifest.v1.EstafetteRelease> 
      getReleasesList();
  /**
   * <code>repeated .estafette.ci.manifest.v1.EstafetteRelease releases = 7;</code>
   */
  com.estafette.ci.manifest.v1.EstafetteRelease getReleases(int index);
  /**
   * <code>repeated .estafette.ci.manifest.v1.EstafetteRelease releases = 7;</code>
   */
  int getReleasesCount();
  /**
   * <code>repeated .estafette.ci.manifest.v1.EstafetteRelease releases = 7;</code>
   */
  java.util.List<? extends com.estafette.ci.manifest.v1.EstafetteReleaseOrBuilder> 
      getReleasesOrBuilderList();
  /**
   * <code>repeated .estafette.ci.manifest.v1.EstafetteRelease releases = 7;</code>
   */
  com.estafette.ci.manifest.v1.EstafetteReleaseOrBuilder getReleasesOrBuilder(
      int index);
}
