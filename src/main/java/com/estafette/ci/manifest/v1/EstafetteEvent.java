// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: estafette/ci/manifest/v1/estafette_event.proto

package com.estafette.ci.manifest.v1;

/**
 * Protobuf type {@code estafette.ci.manifest.v1.EstafetteEvent}
 */
public  final class EstafetteEvent extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:estafette.ci.manifest.v1.EstafetteEvent)
    EstafetteEventOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EstafetteEvent.newBuilder() to construct.
  private EstafetteEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EstafetteEvent() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new EstafetteEvent();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private EstafetteEvent(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.estafette.ci.manifest.v1.EstafettePipelineEvent.Builder subBuilder = null;
            if (pipeline_ != null) {
              subBuilder = pipeline_.toBuilder();
            }
            pipeline_ = input.readMessage(com.estafette.ci.manifest.v1.EstafettePipelineEvent.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(pipeline_);
              pipeline_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.estafette.ci.manifest.v1.EstafetteReleaseEvent.Builder subBuilder = null;
            if (release_ != null) {
              subBuilder = release_.toBuilder();
            }
            release_ = input.readMessage(com.estafette.ci.manifest.v1.EstafetteReleaseEvent.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(release_);
              release_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            com.estafette.ci.manifest.v1.EstafetteGitEvent.Builder subBuilder = null;
            if (git_ != null) {
              subBuilder = git_.toBuilder();
            }
            git_ = input.readMessage(com.estafette.ci.manifest.v1.EstafetteGitEvent.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(git_);
              git_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            com.estafette.ci.manifest.v1.EstafetteDockerEvent.Builder subBuilder = null;
            if (docker_ != null) {
              subBuilder = docker_.toBuilder();
            }
            docker_ = input.readMessage(com.estafette.ci.manifest.v1.EstafetteDockerEvent.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(docker_);
              docker_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            com.estafette.ci.manifest.v1.EstafetteCronEvent.Builder subBuilder = null;
            if (cron_ != null) {
              subBuilder = cron_.toBuilder();
            }
            cron_ = input.readMessage(com.estafette.ci.manifest.v1.EstafetteCronEvent.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(cron_);
              cron_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            com.estafette.ci.manifest.v1.EstafettePubSubEvent.Builder subBuilder = null;
            if (pubSub_ != null) {
              subBuilder = pubSub_.toBuilder();
            }
            pubSub_ = input.readMessage(com.estafette.ci.manifest.v1.EstafettePubSubEvent.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(pubSub_);
              pubSub_ = subBuilder.buildPartial();
            }

            break;
          }
          case 58: {
            com.estafette.ci.manifest.v1.EstafetteManualEvent.Builder subBuilder = null;
            if (manual_ != null) {
              subBuilder = manual_.toBuilder();
            }
            manual_ = input.readMessage(com.estafette.ci.manifest.v1.EstafetteManualEvent.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(manual_);
              manual_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.estafette.ci.manifest.v1.EstafetteEventOuterClass.internal_static_estafette_ci_manifest_v1_EstafetteEvent_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.estafette.ci.manifest.v1.EstafetteEventOuterClass.internal_static_estafette_ci_manifest_v1_EstafetteEvent_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.estafette.ci.manifest.v1.EstafetteEvent.class, com.estafette.ci.manifest.v1.EstafetteEvent.Builder.class);
  }

  public static final int PIPELINE_FIELD_NUMBER = 1;
  private com.estafette.ci.manifest.v1.EstafettePipelineEvent pipeline_;
  /**
   * <code>.estafette.ci.manifest.v1.EstafettePipelineEvent pipeline = 1;</code>
   */
  public boolean hasPipeline() {
    return pipeline_ != null;
  }
  /**
   * <code>.estafette.ci.manifest.v1.EstafettePipelineEvent pipeline = 1;</code>
   */
  public com.estafette.ci.manifest.v1.EstafettePipelineEvent getPipeline() {
    return pipeline_ == null ? com.estafette.ci.manifest.v1.EstafettePipelineEvent.getDefaultInstance() : pipeline_;
  }
  /**
   * <code>.estafette.ci.manifest.v1.EstafettePipelineEvent pipeline = 1;</code>
   */
  public com.estafette.ci.manifest.v1.EstafettePipelineEventOrBuilder getPipelineOrBuilder() {
    return getPipeline();
  }

  public static final int RELEASE_FIELD_NUMBER = 2;
  private com.estafette.ci.manifest.v1.EstafetteReleaseEvent release_;
  /**
   * <code>.estafette.ci.manifest.v1.EstafetteReleaseEvent release = 2;</code>
   */
  public boolean hasRelease() {
    return release_ != null;
  }
  /**
   * <code>.estafette.ci.manifest.v1.EstafetteReleaseEvent release = 2;</code>
   */
  public com.estafette.ci.manifest.v1.EstafetteReleaseEvent getRelease() {
    return release_ == null ? com.estafette.ci.manifest.v1.EstafetteReleaseEvent.getDefaultInstance() : release_;
  }
  /**
   * <code>.estafette.ci.manifest.v1.EstafetteReleaseEvent release = 2;</code>
   */
  public com.estafette.ci.manifest.v1.EstafetteReleaseEventOrBuilder getReleaseOrBuilder() {
    return getRelease();
  }

  public static final int GIT_FIELD_NUMBER = 3;
  private com.estafette.ci.manifest.v1.EstafetteGitEvent git_;
  /**
   * <code>.estafette.ci.manifest.v1.EstafetteGitEvent git = 3;</code>
   */
  public boolean hasGit() {
    return git_ != null;
  }
  /**
   * <code>.estafette.ci.manifest.v1.EstafetteGitEvent git = 3;</code>
   */
  public com.estafette.ci.manifest.v1.EstafetteGitEvent getGit() {
    return git_ == null ? com.estafette.ci.manifest.v1.EstafetteGitEvent.getDefaultInstance() : git_;
  }
  /**
   * <code>.estafette.ci.manifest.v1.EstafetteGitEvent git = 3;</code>
   */
  public com.estafette.ci.manifest.v1.EstafetteGitEventOrBuilder getGitOrBuilder() {
    return getGit();
  }

  public static final int DOCKER_FIELD_NUMBER = 4;
  private com.estafette.ci.manifest.v1.EstafetteDockerEvent docker_;
  /**
   * <code>.estafette.ci.manifest.v1.EstafetteDockerEvent docker = 4;</code>
   */
  public boolean hasDocker() {
    return docker_ != null;
  }
  /**
   * <code>.estafette.ci.manifest.v1.EstafetteDockerEvent docker = 4;</code>
   */
  public com.estafette.ci.manifest.v1.EstafetteDockerEvent getDocker() {
    return docker_ == null ? com.estafette.ci.manifest.v1.EstafetteDockerEvent.getDefaultInstance() : docker_;
  }
  /**
   * <code>.estafette.ci.manifest.v1.EstafetteDockerEvent docker = 4;</code>
   */
  public com.estafette.ci.manifest.v1.EstafetteDockerEventOrBuilder getDockerOrBuilder() {
    return getDocker();
  }

  public static final int CRON_FIELD_NUMBER = 5;
  private com.estafette.ci.manifest.v1.EstafetteCronEvent cron_;
  /**
   * <code>.estafette.ci.manifest.v1.EstafetteCronEvent cron = 5;</code>
   */
  public boolean hasCron() {
    return cron_ != null;
  }
  /**
   * <code>.estafette.ci.manifest.v1.EstafetteCronEvent cron = 5;</code>
   */
  public com.estafette.ci.manifest.v1.EstafetteCronEvent getCron() {
    return cron_ == null ? com.estafette.ci.manifest.v1.EstafetteCronEvent.getDefaultInstance() : cron_;
  }
  /**
   * <code>.estafette.ci.manifest.v1.EstafetteCronEvent cron = 5;</code>
   */
  public com.estafette.ci.manifest.v1.EstafetteCronEventOrBuilder getCronOrBuilder() {
    return getCron();
  }

  public static final int PUB_SUB_FIELD_NUMBER = 6;
  private com.estafette.ci.manifest.v1.EstafettePubSubEvent pubSub_;
  /**
   * <code>.estafette.ci.manifest.v1.EstafettePubSubEvent pub_sub = 6;</code>
   */
  public boolean hasPubSub() {
    return pubSub_ != null;
  }
  /**
   * <code>.estafette.ci.manifest.v1.EstafettePubSubEvent pub_sub = 6;</code>
   */
  public com.estafette.ci.manifest.v1.EstafettePubSubEvent getPubSub() {
    return pubSub_ == null ? com.estafette.ci.manifest.v1.EstafettePubSubEvent.getDefaultInstance() : pubSub_;
  }
  /**
   * <code>.estafette.ci.manifest.v1.EstafettePubSubEvent pub_sub = 6;</code>
   */
  public com.estafette.ci.manifest.v1.EstafettePubSubEventOrBuilder getPubSubOrBuilder() {
    return getPubSub();
  }

  public static final int MANUAL_FIELD_NUMBER = 7;
  private com.estafette.ci.manifest.v1.EstafetteManualEvent manual_;
  /**
   * <code>.estafette.ci.manifest.v1.EstafetteManualEvent manual = 7;</code>
   */
  public boolean hasManual() {
    return manual_ != null;
  }
  /**
   * <code>.estafette.ci.manifest.v1.EstafetteManualEvent manual = 7;</code>
   */
  public com.estafette.ci.manifest.v1.EstafetteManualEvent getManual() {
    return manual_ == null ? com.estafette.ci.manifest.v1.EstafetteManualEvent.getDefaultInstance() : manual_;
  }
  /**
   * <code>.estafette.ci.manifest.v1.EstafetteManualEvent manual = 7;</code>
   */
  public com.estafette.ci.manifest.v1.EstafetteManualEventOrBuilder getManualOrBuilder() {
    return getManual();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (pipeline_ != null) {
      output.writeMessage(1, getPipeline());
    }
    if (release_ != null) {
      output.writeMessage(2, getRelease());
    }
    if (git_ != null) {
      output.writeMessage(3, getGit());
    }
    if (docker_ != null) {
      output.writeMessage(4, getDocker());
    }
    if (cron_ != null) {
      output.writeMessage(5, getCron());
    }
    if (pubSub_ != null) {
      output.writeMessage(6, getPubSub());
    }
    if (manual_ != null) {
      output.writeMessage(7, getManual());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (pipeline_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getPipeline());
    }
    if (release_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getRelease());
    }
    if (git_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getGit());
    }
    if (docker_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getDocker());
    }
    if (cron_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getCron());
    }
    if (pubSub_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getPubSub());
    }
    if (manual_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getManual());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.estafette.ci.manifest.v1.EstafetteEvent)) {
      return super.equals(obj);
    }
    com.estafette.ci.manifest.v1.EstafetteEvent other = (com.estafette.ci.manifest.v1.EstafetteEvent) obj;

    if (hasPipeline() != other.hasPipeline()) return false;
    if (hasPipeline()) {
      if (!getPipeline()
          .equals(other.getPipeline())) return false;
    }
    if (hasRelease() != other.hasRelease()) return false;
    if (hasRelease()) {
      if (!getRelease()
          .equals(other.getRelease())) return false;
    }
    if (hasGit() != other.hasGit()) return false;
    if (hasGit()) {
      if (!getGit()
          .equals(other.getGit())) return false;
    }
    if (hasDocker() != other.hasDocker()) return false;
    if (hasDocker()) {
      if (!getDocker()
          .equals(other.getDocker())) return false;
    }
    if (hasCron() != other.hasCron()) return false;
    if (hasCron()) {
      if (!getCron()
          .equals(other.getCron())) return false;
    }
    if (hasPubSub() != other.hasPubSub()) return false;
    if (hasPubSub()) {
      if (!getPubSub()
          .equals(other.getPubSub())) return false;
    }
    if (hasManual() != other.hasManual()) return false;
    if (hasManual()) {
      if (!getManual()
          .equals(other.getManual())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasPipeline()) {
      hash = (37 * hash) + PIPELINE_FIELD_NUMBER;
      hash = (53 * hash) + getPipeline().hashCode();
    }
    if (hasRelease()) {
      hash = (37 * hash) + RELEASE_FIELD_NUMBER;
      hash = (53 * hash) + getRelease().hashCode();
    }
    if (hasGit()) {
      hash = (37 * hash) + GIT_FIELD_NUMBER;
      hash = (53 * hash) + getGit().hashCode();
    }
    if (hasDocker()) {
      hash = (37 * hash) + DOCKER_FIELD_NUMBER;
      hash = (53 * hash) + getDocker().hashCode();
    }
    if (hasCron()) {
      hash = (37 * hash) + CRON_FIELD_NUMBER;
      hash = (53 * hash) + getCron().hashCode();
    }
    if (hasPubSub()) {
      hash = (37 * hash) + PUB_SUB_FIELD_NUMBER;
      hash = (53 * hash) + getPubSub().hashCode();
    }
    if (hasManual()) {
      hash = (37 * hash) + MANUAL_FIELD_NUMBER;
      hash = (53 * hash) + getManual().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.estafette.ci.manifest.v1.EstafetteEvent parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.estafette.ci.manifest.v1.EstafetteEvent parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.estafette.ci.manifest.v1.EstafetteEvent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.estafette.ci.manifest.v1.EstafetteEvent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.estafette.ci.manifest.v1.EstafetteEvent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.estafette.ci.manifest.v1.EstafetteEvent parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.estafette.ci.manifest.v1.EstafetteEvent parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.estafette.ci.manifest.v1.EstafetteEvent parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.estafette.ci.manifest.v1.EstafetteEvent parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.estafette.ci.manifest.v1.EstafetteEvent parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.estafette.ci.manifest.v1.EstafetteEvent parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.estafette.ci.manifest.v1.EstafetteEvent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.estafette.ci.manifest.v1.EstafetteEvent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code estafette.ci.manifest.v1.EstafetteEvent}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:estafette.ci.manifest.v1.EstafetteEvent)
      com.estafette.ci.manifest.v1.EstafetteEventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.estafette.ci.manifest.v1.EstafetteEventOuterClass.internal_static_estafette_ci_manifest_v1_EstafetteEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.estafette.ci.manifest.v1.EstafetteEventOuterClass.internal_static_estafette_ci_manifest_v1_EstafetteEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.estafette.ci.manifest.v1.EstafetteEvent.class, com.estafette.ci.manifest.v1.EstafetteEvent.Builder.class);
    }

    // Construct using com.estafette.ci.manifest.v1.EstafetteEvent.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (pipelineBuilder_ == null) {
        pipeline_ = null;
      } else {
        pipeline_ = null;
        pipelineBuilder_ = null;
      }
      if (releaseBuilder_ == null) {
        release_ = null;
      } else {
        release_ = null;
        releaseBuilder_ = null;
      }
      if (gitBuilder_ == null) {
        git_ = null;
      } else {
        git_ = null;
        gitBuilder_ = null;
      }
      if (dockerBuilder_ == null) {
        docker_ = null;
      } else {
        docker_ = null;
        dockerBuilder_ = null;
      }
      if (cronBuilder_ == null) {
        cron_ = null;
      } else {
        cron_ = null;
        cronBuilder_ = null;
      }
      if (pubSubBuilder_ == null) {
        pubSub_ = null;
      } else {
        pubSub_ = null;
        pubSubBuilder_ = null;
      }
      if (manualBuilder_ == null) {
        manual_ = null;
      } else {
        manual_ = null;
        manualBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.estafette.ci.manifest.v1.EstafetteEventOuterClass.internal_static_estafette_ci_manifest_v1_EstafetteEvent_descriptor;
    }

    @java.lang.Override
    public com.estafette.ci.manifest.v1.EstafetteEvent getDefaultInstanceForType() {
      return com.estafette.ci.manifest.v1.EstafetteEvent.getDefaultInstance();
    }

    @java.lang.Override
    public com.estafette.ci.manifest.v1.EstafetteEvent build() {
      com.estafette.ci.manifest.v1.EstafetteEvent result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.estafette.ci.manifest.v1.EstafetteEvent buildPartial() {
      com.estafette.ci.manifest.v1.EstafetteEvent result = new com.estafette.ci.manifest.v1.EstafetteEvent(this);
      if (pipelineBuilder_ == null) {
        result.pipeline_ = pipeline_;
      } else {
        result.pipeline_ = pipelineBuilder_.build();
      }
      if (releaseBuilder_ == null) {
        result.release_ = release_;
      } else {
        result.release_ = releaseBuilder_.build();
      }
      if (gitBuilder_ == null) {
        result.git_ = git_;
      } else {
        result.git_ = gitBuilder_.build();
      }
      if (dockerBuilder_ == null) {
        result.docker_ = docker_;
      } else {
        result.docker_ = dockerBuilder_.build();
      }
      if (cronBuilder_ == null) {
        result.cron_ = cron_;
      } else {
        result.cron_ = cronBuilder_.build();
      }
      if (pubSubBuilder_ == null) {
        result.pubSub_ = pubSub_;
      } else {
        result.pubSub_ = pubSubBuilder_.build();
      }
      if (manualBuilder_ == null) {
        result.manual_ = manual_;
      } else {
        result.manual_ = manualBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.estafette.ci.manifest.v1.EstafetteEvent) {
        return mergeFrom((com.estafette.ci.manifest.v1.EstafetteEvent)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.estafette.ci.manifest.v1.EstafetteEvent other) {
      if (other == com.estafette.ci.manifest.v1.EstafetteEvent.getDefaultInstance()) return this;
      if (other.hasPipeline()) {
        mergePipeline(other.getPipeline());
      }
      if (other.hasRelease()) {
        mergeRelease(other.getRelease());
      }
      if (other.hasGit()) {
        mergeGit(other.getGit());
      }
      if (other.hasDocker()) {
        mergeDocker(other.getDocker());
      }
      if (other.hasCron()) {
        mergeCron(other.getCron());
      }
      if (other.hasPubSub()) {
        mergePubSub(other.getPubSub());
      }
      if (other.hasManual()) {
        mergeManual(other.getManual());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.estafette.ci.manifest.v1.EstafetteEvent parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.estafette.ci.manifest.v1.EstafetteEvent) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.estafette.ci.manifest.v1.EstafettePipelineEvent pipeline_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.estafette.ci.manifest.v1.EstafettePipelineEvent, com.estafette.ci.manifest.v1.EstafettePipelineEvent.Builder, com.estafette.ci.manifest.v1.EstafettePipelineEventOrBuilder> pipelineBuilder_;
    /**
     * <code>.estafette.ci.manifest.v1.EstafettePipelineEvent pipeline = 1;</code>
     */
    public boolean hasPipeline() {
      return pipelineBuilder_ != null || pipeline_ != null;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafettePipelineEvent pipeline = 1;</code>
     */
    public com.estafette.ci.manifest.v1.EstafettePipelineEvent getPipeline() {
      if (pipelineBuilder_ == null) {
        return pipeline_ == null ? com.estafette.ci.manifest.v1.EstafettePipelineEvent.getDefaultInstance() : pipeline_;
      } else {
        return pipelineBuilder_.getMessage();
      }
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafettePipelineEvent pipeline = 1;</code>
     */
    public Builder setPipeline(com.estafette.ci.manifest.v1.EstafettePipelineEvent value) {
      if (pipelineBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        pipeline_ = value;
        onChanged();
      } else {
        pipelineBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafettePipelineEvent pipeline = 1;</code>
     */
    public Builder setPipeline(
        com.estafette.ci.manifest.v1.EstafettePipelineEvent.Builder builderForValue) {
      if (pipelineBuilder_ == null) {
        pipeline_ = builderForValue.build();
        onChanged();
      } else {
        pipelineBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafettePipelineEvent pipeline = 1;</code>
     */
    public Builder mergePipeline(com.estafette.ci.manifest.v1.EstafettePipelineEvent value) {
      if (pipelineBuilder_ == null) {
        if (pipeline_ != null) {
          pipeline_ =
            com.estafette.ci.manifest.v1.EstafettePipelineEvent.newBuilder(pipeline_).mergeFrom(value).buildPartial();
        } else {
          pipeline_ = value;
        }
        onChanged();
      } else {
        pipelineBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafettePipelineEvent pipeline = 1;</code>
     */
    public Builder clearPipeline() {
      if (pipelineBuilder_ == null) {
        pipeline_ = null;
        onChanged();
      } else {
        pipeline_ = null;
        pipelineBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafettePipelineEvent pipeline = 1;</code>
     */
    public com.estafette.ci.manifest.v1.EstafettePipelineEvent.Builder getPipelineBuilder() {
      
      onChanged();
      return getPipelineFieldBuilder().getBuilder();
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafettePipelineEvent pipeline = 1;</code>
     */
    public com.estafette.ci.manifest.v1.EstafettePipelineEventOrBuilder getPipelineOrBuilder() {
      if (pipelineBuilder_ != null) {
        return pipelineBuilder_.getMessageOrBuilder();
      } else {
        return pipeline_ == null ?
            com.estafette.ci.manifest.v1.EstafettePipelineEvent.getDefaultInstance() : pipeline_;
      }
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafettePipelineEvent pipeline = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.estafette.ci.manifest.v1.EstafettePipelineEvent, com.estafette.ci.manifest.v1.EstafettePipelineEvent.Builder, com.estafette.ci.manifest.v1.EstafettePipelineEventOrBuilder> 
        getPipelineFieldBuilder() {
      if (pipelineBuilder_ == null) {
        pipelineBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.estafette.ci.manifest.v1.EstafettePipelineEvent, com.estafette.ci.manifest.v1.EstafettePipelineEvent.Builder, com.estafette.ci.manifest.v1.EstafettePipelineEventOrBuilder>(
                getPipeline(),
                getParentForChildren(),
                isClean());
        pipeline_ = null;
      }
      return pipelineBuilder_;
    }

    private com.estafette.ci.manifest.v1.EstafetteReleaseEvent release_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.estafette.ci.manifest.v1.EstafetteReleaseEvent, com.estafette.ci.manifest.v1.EstafetteReleaseEvent.Builder, com.estafette.ci.manifest.v1.EstafetteReleaseEventOrBuilder> releaseBuilder_;
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteReleaseEvent release = 2;</code>
     */
    public boolean hasRelease() {
      return releaseBuilder_ != null || release_ != null;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteReleaseEvent release = 2;</code>
     */
    public com.estafette.ci.manifest.v1.EstafetteReleaseEvent getRelease() {
      if (releaseBuilder_ == null) {
        return release_ == null ? com.estafette.ci.manifest.v1.EstafetteReleaseEvent.getDefaultInstance() : release_;
      } else {
        return releaseBuilder_.getMessage();
      }
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteReleaseEvent release = 2;</code>
     */
    public Builder setRelease(com.estafette.ci.manifest.v1.EstafetteReleaseEvent value) {
      if (releaseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        release_ = value;
        onChanged();
      } else {
        releaseBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteReleaseEvent release = 2;</code>
     */
    public Builder setRelease(
        com.estafette.ci.manifest.v1.EstafetteReleaseEvent.Builder builderForValue) {
      if (releaseBuilder_ == null) {
        release_ = builderForValue.build();
        onChanged();
      } else {
        releaseBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteReleaseEvent release = 2;</code>
     */
    public Builder mergeRelease(com.estafette.ci.manifest.v1.EstafetteReleaseEvent value) {
      if (releaseBuilder_ == null) {
        if (release_ != null) {
          release_ =
            com.estafette.ci.manifest.v1.EstafetteReleaseEvent.newBuilder(release_).mergeFrom(value).buildPartial();
        } else {
          release_ = value;
        }
        onChanged();
      } else {
        releaseBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteReleaseEvent release = 2;</code>
     */
    public Builder clearRelease() {
      if (releaseBuilder_ == null) {
        release_ = null;
        onChanged();
      } else {
        release_ = null;
        releaseBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteReleaseEvent release = 2;</code>
     */
    public com.estafette.ci.manifest.v1.EstafetteReleaseEvent.Builder getReleaseBuilder() {
      
      onChanged();
      return getReleaseFieldBuilder().getBuilder();
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteReleaseEvent release = 2;</code>
     */
    public com.estafette.ci.manifest.v1.EstafetteReleaseEventOrBuilder getReleaseOrBuilder() {
      if (releaseBuilder_ != null) {
        return releaseBuilder_.getMessageOrBuilder();
      } else {
        return release_ == null ?
            com.estafette.ci.manifest.v1.EstafetteReleaseEvent.getDefaultInstance() : release_;
      }
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteReleaseEvent release = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.estafette.ci.manifest.v1.EstafetteReleaseEvent, com.estafette.ci.manifest.v1.EstafetteReleaseEvent.Builder, com.estafette.ci.manifest.v1.EstafetteReleaseEventOrBuilder> 
        getReleaseFieldBuilder() {
      if (releaseBuilder_ == null) {
        releaseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.estafette.ci.manifest.v1.EstafetteReleaseEvent, com.estafette.ci.manifest.v1.EstafetteReleaseEvent.Builder, com.estafette.ci.manifest.v1.EstafetteReleaseEventOrBuilder>(
                getRelease(),
                getParentForChildren(),
                isClean());
        release_ = null;
      }
      return releaseBuilder_;
    }

    private com.estafette.ci.manifest.v1.EstafetteGitEvent git_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.estafette.ci.manifest.v1.EstafetteGitEvent, com.estafette.ci.manifest.v1.EstafetteGitEvent.Builder, com.estafette.ci.manifest.v1.EstafetteGitEventOrBuilder> gitBuilder_;
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteGitEvent git = 3;</code>
     */
    public boolean hasGit() {
      return gitBuilder_ != null || git_ != null;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteGitEvent git = 3;</code>
     */
    public com.estafette.ci.manifest.v1.EstafetteGitEvent getGit() {
      if (gitBuilder_ == null) {
        return git_ == null ? com.estafette.ci.manifest.v1.EstafetteGitEvent.getDefaultInstance() : git_;
      } else {
        return gitBuilder_.getMessage();
      }
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteGitEvent git = 3;</code>
     */
    public Builder setGit(com.estafette.ci.manifest.v1.EstafetteGitEvent value) {
      if (gitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        git_ = value;
        onChanged();
      } else {
        gitBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteGitEvent git = 3;</code>
     */
    public Builder setGit(
        com.estafette.ci.manifest.v1.EstafetteGitEvent.Builder builderForValue) {
      if (gitBuilder_ == null) {
        git_ = builderForValue.build();
        onChanged();
      } else {
        gitBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteGitEvent git = 3;</code>
     */
    public Builder mergeGit(com.estafette.ci.manifest.v1.EstafetteGitEvent value) {
      if (gitBuilder_ == null) {
        if (git_ != null) {
          git_ =
            com.estafette.ci.manifest.v1.EstafetteGitEvent.newBuilder(git_).mergeFrom(value).buildPartial();
        } else {
          git_ = value;
        }
        onChanged();
      } else {
        gitBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteGitEvent git = 3;</code>
     */
    public Builder clearGit() {
      if (gitBuilder_ == null) {
        git_ = null;
        onChanged();
      } else {
        git_ = null;
        gitBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteGitEvent git = 3;</code>
     */
    public com.estafette.ci.manifest.v1.EstafetteGitEvent.Builder getGitBuilder() {
      
      onChanged();
      return getGitFieldBuilder().getBuilder();
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteGitEvent git = 3;</code>
     */
    public com.estafette.ci.manifest.v1.EstafetteGitEventOrBuilder getGitOrBuilder() {
      if (gitBuilder_ != null) {
        return gitBuilder_.getMessageOrBuilder();
      } else {
        return git_ == null ?
            com.estafette.ci.manifest.v1.EstafetteGitEvent.getDefaultInstance() : git_;
      }
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteGitEvent git = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.estafette.ci.manifest.v1.EstafetteGitEvent, com.estafette.ci.manifest.v1.EstafetteGitEvent.Builder, com.estafette.ci.manifest.v1.EstafetteGitEventOrBuilder> 
        getGitFieldBuilder() {
      if (gitBuilder_ == null) {
        gitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.estafette.ci.manifest.v1.EstafetteGitEvent, com.estafette.ci.manifest.v1.EstafetteGitEvent.Builder, com.estafette.ci.manifest.v1.EstafetteGitEventOrBuilder>(
                getGit(),
                getParentForChildren(),
                isClean());
        git_ = null;
      }
      return gitBuilder_;
    }

    private com.estafette.ci.manifest.v1.EstafetteDockerEvent docker_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.estafette.ci.manifest.v1.EstafetteDockerEvent, com.estafette.ci.manifest.v1.EstafetteDockerEvent.Builder, com.estafette.ci.manifest.v1.EstafetteDockerEventOrBuilder> dockerBuilder_;
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteDockerEvent docker = 4;</code>
     */
    public boolean hasDocker() {
      return dockerBuilder_ != null || docker_ != null;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteDockerEvent docker = 4;</code>
     */
    public com.estafette.ci.manifest.v1.EstafetteDockerEvent getDocker() {
      if (dockerBuilder_ == null) {
        return docker_ == null ? com.estafette.ci.manifest.v1.EstafetteDockerEvent.getDefaultInstance() : docker_;
      } else {
        return dockerBuilder_.getMessage();
      }
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteDockerEvent docker = 4;</code>
     */
    public Builder setDocker(com.estafette.ci.manifest.v1.EstafetteDockerEvent value) {
      if (dockerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        docker_ = value;
        onChanged();
      } else {
        dockerBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteDockerEvent docker = 4;</code>
     */
    public Builder setDocker(
        com.estafette.ci.manifest.v1.EstafetteDockerEvent.Builder builderForValue) {
      if (dockerBuilder_ == null) {
        docker_ = builderForValue.build();
        onChanged();
      } else {
        dockerBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteDockerEvent docker = 4;</code>
     */
    public Builder mergeDocker(com.estafette.ci.manifest.v1.EstafetteDockerEvent value) {
      if (dockerBuilder_ == null) {
        if (docker_ != null) {
          docker_ =
            com.estafette.ci.manifest.v1.EstafetteDockerEvent.newBuilder(docker_).mergeFrom(value).buildPartial();
        } else {
          docker_ = value;
        }
        onChanged();
      } else {
        dockerBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteDockerEvent docker = 4;</code>
     */
    public Builder clearDocker() {
      if (dockerBuilder_ == null) {
        docker_ = null;
        onChanged();
      } else {
        docker_ = null;
        dockerBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteDockerEvent docker = 4;</code>
     */
    public com.estafette.ci.manifest.v1.EstafetteDockerEvent.Builder getDockerBuilder() {
      
      onChanged();
      return getDockerFieldBuilder().getBuilder();
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteDockerEvent docker = 4;</code>
     */
    public com.estafette.ci.manifest.v1.EstafetteDockerEventOrBuilder getDockerOrBuilder() {
      if (dockerBuilder_ != null) {
        return dockerBuilder_.getMessageOrBuilder();
      } else {
        return docker_ == null ?
            com.estafette.ci.manifest.v1.EstafetteDockerEvent.getDefaultInstance() : docker_;
      }
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteDockerEvent docker = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.estafette.ci.manifest.v1.EstafetteDockerEvent, com.estafette.ci.manifest.v1.EstafetteDockerEvent.Builder, com.estafette.ci.manifest.v1.EstafetteDockerEventOrBuilder> 
        getDockerFieldBuilder() {
      if (dockerBuilder_ == null) {
        dockerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.estafette.ci.manifest.v1.EstafetteDockerEvent, com.estafette.ci.manifest.v1.EstafetteDockerEvent.Builder, com.estafette.ci.manifest.v1.EstafetteDockerEventOrBuilder>(
                getDocker(),
                getParentForChildren(),
                isClean());
        docker_ = null;
      }
      return dockerBuilder_;
    }

    private com.estafette.ci.manifest.v1.EstafetteCronEvent cron_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.estafette.ci.manifest.v1.EstafetteCronEvent, com.estafette.ci.manifest.v1.EstafetteCronEvent.Builder, com.estafette.ci.manifest.v1.EstafetteCronEventOrBuilder> cronBuilder_;
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteCronEvent cron = 5;</code>
     */
    public boolean hasCron() {
      return cronBuilder_ != null || cron_ != null;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteCronEvent cron = 5;</code>
     */
    public com.estafette.ci.manifest.v1.EstafetteCronEvent getCron() {
      if (cronBuilder_ == null) {
        return cron_ == null ? com.estafette.ci.manifest.v1.EstafetteCronEvent.getDefaultInstance() : cron_;
      } else {
        return cronBuilder_.getMessage();
      }
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteCronEvent cron = 5;</code>
     */
    public Builder setCron(com.estafette.ci.manifest.v1.EstafetteCronEvent value) {
      if (cronBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        cron_ = value;
        onChanged();
      } else {
        cronBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteCronEvent cron = 5;</code>
     */
    public Builder setCron(
        com.estafette.ci.manifest.v1.EstafetteCronEvent.Builder builderForValue) {
      if (cronBuilder_ == null) {
        cron_ = builderForValue.build();
        onChanged();
      } else {
        cronBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteCronEvent cron = 5;</code>
     */
    public Builder mergeCron(com.estafette.ci.manifest.v1.EstafetteCronEvent value) {
      if (cronBuilder_ == null) {
        if (cron_ != null) {
          cron_ =
            com.estafette.ci.manifest.v1.EstafetteCronEvent.newBuilder(cron_).mergeFrom(value).buildPartial();
        } else {
          cron_ = value;
        }
        onChanged();
      } else {
        cronBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteCronEvent cron = 5;</code>
     */
    public Builder clearCron() {
      if (cronBuilder_ == null) {
        cron_ = null;
        onChanged();
      } else {
        cron_ = null;
        cronBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteCronEvent cron = 5;</code>
     */
    public com.estafette.ci.manifest.v1.EstafetteCronEvent.Builder getCronBuilder() {
      
      onChanged();
      return getCronFieldBuilder().getBuilder();
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteCronEvent cron = 5;</code>
     */
    public com.estafette.ci.manifest.v1.EstafetteCronEventOrBuilder getCronOrBuilder() {
      if (cronBuilder_ != null) {
        return cronBuilder_.getMessageOrBuilder();
      } else {
        return cron_ == null ?
            com.estafette.ci.manifest.v1.EstafetteCronEvent.getDefaultInstance() : cron_;
      }
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteCronEvent cron = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.estafette.ci.manifest.v1.EstafetteCronEvent, com.estafette.ci.manifest.v1.EstafetteCronEvent.Builder, com.estafette.ci.manifest.v1.EstafetteCronEventOrBuilder> 
        getCronFieldBuilder() {
      if (cronBuilder_ == null) {
        cronBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.estafette.ci.manifest.v1.EstafetteCronEvent, com.estafette.ci.manifest.v1.EstafetteCronEvent.Builder, com.estafette.ci.manifest.v1.EstafetteCronEventOrBuilder>(
                getCron(),
                getParentForChildren(),
                isClean());
        cron_ = null;
      }
      return cronBuilder_;
    }

    private com.estafette.ci.manifest.v1.EstafettePubSubEvent pubSub_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.estafette.ci.manifest.v1.EstafettePubSubEvent, com.estafette.ci.manifest.v1.EstafettePubSubEvent.Builder, com.estafette.ci.manifest.v1.EstafettePubSubEventOrBuilder> pubSubBuilder_;
    /**
     * <code>.estafette.ci.manifest.v1.EstafettePubSubEvent pub_sub = 6;</code>
     */
    public boolean hasPubSub() {
      return pubSubBuilder_ != null || pubSub_ != null;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafettePubSubEvent pub_sub = 6;</code>
     */
    public com.estafette.ci.manifest.v1.EstafettePubSubEvent getPubSub() {
      if (pubSubBuilder_ == null) {
        return pubSub_ == null ? com.estafette.ci.manifest.v1.EstafettePubSubEvent.getDefaultInstance() : pubSub_;
      } else {
        return pubSubBuilder_.getMessage();
      }
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafettePubSubEvent pub_sub = 6;</code>
     */
    public Builder setPubSub(com.estafette.ci.manifest.v1.EstafettePubSubEvent value) {
      if (pubSubBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        pubSub_ = value;
        onChanged();
      } else {
        pubSubBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafettePubSubEvent pub_sub = 6;</code>
     */
    public Builder setPubSub(
        com.estafette.ci.manifest.v1.EstafettePubSubEvent.Builder builderForValue) {
      if (pubSubBuilder_ == null) {
        pubSub_ = builderForValue.build();
        onChanged();
      } else {
        pubSubBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafettePubSubEvent pub_sub = 6;</code>
     */
    public Builder mergePubSub(com.estafette.ci.manifest.v1.EstafettePubSubEvent value) {
      if (pubSubBuilder_ == null) {
        if (pubSub_ != null) {
          pubSub_ =
            com.estafette.ci.manifest.v1.EstafettePubSubEvent.newBuilder(pubSub_).mergeFrom(value).buildPartial();
        } else {
          pubSub_ = value;
        }
        onChanged();
      } else {
        pubSubBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafettePubSubEvent pub_sub = 6;</code>
     */
    public Builder clearPubSub() {
      if (pubSubBuilder_ == null) {
        pubSub_ = null;
        onChanged();
      } else {
        pubSub_ = null;
        pubSubBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafettePubSubEvent pub_sub = 6;</code>
     */
    public com.estafette.ci.manifest.v1.EstafettePubSubEvent.Builder getPubSubBuilder() {
      
      onChanged();
      return getPubSubFieldBuilder().getBuilder();
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafettePubSubEvent pub_sub = 6;</code>
     */
    public com.estafette.ci.manifest.v1.EstafettePubSubEventOrBuilder getPubSubOrBuilder() {
      if (pubSubBuilder_ != null) {
        return pubSubBuilder_.getMessageOrBuilder();
      } else {
        return pubSub_ == null ?
            com.estafette.ci.manifest.v1.EstafettePubSubEvent.getDefaultInstance() : pubSub_;
      }
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafettePubSubEvent pub_sub = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.estafette.ci.manifest.v1.EstafettePubSubEvent, com.estafette.ci.manifest.v1.EstafettePubSubEvent.Builder, com.estafette.ci.manifest.v1.EstafettePubSubEventOrBuilder> 
        getPubSubFieldBuilder() {
      if (pubSubBuilder_ == null) {
        pubSubBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.estafette.ci.manifest.v1.EstafettePubSubEvent, com.estafette.ci.manifest.v1.EstafettePubSubEvent.Builder, com.estafette.ci.manifest.v1.EstafettePubSubEventOrBuilder>(
                getPubSub(),
                getParentForChildren(),
                isClean());
        pubSub_ = null;
      }
      return pubSubBuilder_;
    }

    private com.estafette.ci.manifest.v1.EstafetteManualEvent manual_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.estafette.ci.manifest.v1.EstafetteManualEvent, com.estafette.ci.manifest.v1.EstafetteManualEvent.Builder, com.estafette.ci.manifest.v1.EstafetteManualEventOrBuilder> manualBuilder_;
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteManualEvent manual = 7;</code>
     */
    public boolean hasManual() {
      return manualBuilder_ != null || manual_ != null;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteManualEvent manual = 7;</code>
     */
    public com.estafette.ci.manifest.v1.EstafetteManualEvent getManual() {
      if (manualBuilder_ == null) {
        return manual_ == null ? com.estafette.ci.manifest.v1.EstafetteManualEvent.getDefaultInstance() : manual_;
      } else {
        return manualBuilder_.getMessage();
      }
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteManualEvent manual = 7;</code>
     */
    public Builder setManual(com.estafette.ci.manifest.v1.EstafetteManualEvent value) {
      if (manualBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        manual_ = value;
        onChanged();
      } else {
        manualBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteManualEvent manual = 7;</code>
     */
    public Builder setManual(
        com.estafette.ci.manifest.v1.EstafetteManualEvent.Builder builderForValue) {
      if (manualBuilder_ == null) {
        manual_ = builderForValue.build();
        onChanged();
      } else {
        manualBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteManualEvent manual = 7;</code>
     */
    public Builder mergeManual(com.estafette.ci.manifest.v1.EstafetteManualEvent value) {
      if (manualBuilder_ == null) {
        if (manual_ != null) {
          manual_ =
            com.estafette.ci.manifest.v1.EstafetteManualEvent.newBuilder(manual_).mergeFrom(value).buildPartial();
        } else {
          manual_ = value;
        }
        onChanged();
      } else {
        manualBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteManualEvent manual = 7;</code>
     */
    public Builder clearManual() {
      if (manualBuilder_ == null) {
        manual_ = null;
        onChanged();
      } else {
        manual_ = null;
        manualBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteManualEvent manual = 7;</code>
     */
    public com.estafette.ci.manifest.v1.EstafetteManualEvent.Builder getManualBuilder() {
      
      onChanged();
      return getManualFieldBuilder().getBuilder();
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteManualEvent manual = 7;</code>
     */
    public com.estafette.ci.manifest.v1.EstafetteManualEventOrBuilder getManualOrBuilder() {
      if (manualBuilder_ != null) {
        return manualBuilder_.getMessageOrBuilder();
      } else {
        return manual_ == null ?
            com.estafette.ci.manifest.v1.EstafetteManualEvent.getDefaultInstance() : manual_;
      }
    }
    /**
     * <code>.estafette.ci.manifest.v1.EstafetteManualEvent manual = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.estafette.ci.manifest.v1.EstafetteManualEvent, com.estafette.ci.manifest.v1.EstafetteManualEvent.Builder, com.estafette.ci.manifest.v1.EstafetteManualEventOrBuilder> 
        getManualFieldBuilder() {
      if (manualBuilder_ == null) {
        manualBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.estafette.ci.manifest.v1.EstafetteManualEvent, com.estafette.ci.manifest.v1.EstafetteManualEvent.Builder, com.estafette.ci.manifest.v1.EstafetteManualEventOrBuilder>(
                getManual(),
                getParentForChildren(),
                isClean());
        manual_ = null;
      }
      return manualBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:estafette.ci.manifest.v1.EstafetteEvent)
  }

  // @@protoc_insertion_point(class_scope:estafette.ci.manifest.v1.EstafetteEvent)
  private static final com.estafette.ci.manifest.v1.EstafetteEvent DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.estafette.ci.manifest.v1.EstafetteEvent();
  }

  public static com.estafette.ci.manifest.v1.EstafetteEvent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<EstafetteEvent>
      PARSER = new com.google.protobuf.AbstractParser<EstafetteEvent>() {
    @java.lang.Override
    public EstafetteEvent parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new EstafetteEvent(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<EstafetteEvent> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EstafetteEvent> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.estafette.ci.manifest.v1.EstafetteEvent getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

